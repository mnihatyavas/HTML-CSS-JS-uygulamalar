// C1c45d.js: Katagori ve terimli ürün resimleri sergileme fetch kodlaması alt-örneği.
fetch ("C1c45c.json")
    .then (function (yanıt) {return yanıt.json();})
    .then (function (jsonKodlama) {
        let ürünler = jsonKodlama;
        uygulamayıÇalıştır (ürünler);})
    .catch (function (hata) {console.log ("Fetch, json dosyasını okuyamadı. HATA: " + hata.message);});

function uygulamayıÇalıştır (ürünler) {
    const seçilenKatagori = document.querySelector ("#katagori");
    const arananİbare = document.querySelector ("#araştırılacakİbare");
    const aramaDüğmesi = document.querySelector ("button");
    const esas = document.querySelector ("main");

    let sonKatagori = seçilenKatagori.value;
    let sonAraştırma = "";
    let katagoriGrubu; // Seçili katagori
    let finalGrubu; // Aranan ibare yoksa, katagoriGrubu, varsa katagoriGrubu'ndan bulunan ürünler...
    finalGrubu = ürünler; // İlk başlarken tüm ürünleri sergilet...
    sergiyiGüncelle();

    katagoriGrubu = []; // Araştırma başında henüz ürün yok farzet...
    finalGrubu = [];
    aramaDüğmesi.onclick = katagoriyiSeç; // Tıklandığında katagoriyi ve araştırılacak ibareyi kontrol et..
    function katagoriyiSeç (o) {
        o.preventDefault(); // Varsayılıdan vazgeç...
        katagoriGrubu = []; // Bir önceki tıklanan tarama verilerini temizle...
        finalGrubu = [];
        if (seçilenKatagori.value === sonKatagori && arananİbare.value.trim() === sonAraştırma) {return;
        }else {// Katagori ve/veya İbare değişikliği varsa...
            sonKatagori = seçilenKatagori.value;
            sonAraştırma = arananİbare.value.trim();
            if (seçilenKatagori.value === "Tümü") {
                katagoriGrubu = ürünler;
                ürünleriSeç();
            }else {// katagoriGrubu tümü değilse sınırlı katori ürünlerini ekle...
                let küçükHarfliKatagori = seçilenKatagori.value.toLowerCase(); // Select büyük harfbaşlangıcını json küçük tip'le uyumlat...
                for (let i = 0; i < ürünler.length ; i++) {if (ürünler [i].tip === küçükHarfliKatagori) {katagoriGrubu.push (ürünler [i]);}}
                ürünleriSeç();
            } // else-iç sonu...
        } // else-dış sonu...
    } // func sonu...

    function ürünleriSeç() {
        if (arananİbare.value.trim() === "") {// Aranan ibare yoksa, finalGrubu katagoriGrubu'dur...
            finalGrubu = katagoriGrubu;
            sergiyiGüncelle();
        }else {// İbare varsa, finalGrubu seçili katogoriGrubu ürünlerinin adında taranan uyumlu ürünler'dir...
            let küçükHarfliİbare = arananİbare.value.trim().toLowerCase();
            for (let i = 0; i < katagoriGrubu.length ; i++) {if (katagoriGrubu [i].ad.indexOf (küçükHarfliİbare) !== -1) {finalGrubu.push (katagoriGrubu [i]);} }
            sergiyiGüncelle();
        } // else sonu...
    } // func sonu...

    function sergiyiGüncelle() {
        while (esas.firstChild) {esas.removeChild (esas.firstChild);} // Önceden sergileneni temizle...
        if (finalGrubu.length === 0) {// Seçilen katagoriden aranan ibareye hiç raslanmamışsa...
            const paragraf = document.createElement ("p");
            paragraf.textContent = "Seçili kategorideki ürün adları içeriğinde aranan terime hiç rastlanmadı!";
            esas.appendChild (paragraf);
        }else {for (let i = 0; i < finalGrubu.length; i++) {damlayıGetir (finalGrubu [i]);} } // finalGrubu içeriklerini tek tek yükleyip main-section'da sergile...
    } // func sonu...

    function damlayıGetir(ürün) {
        let resimYolu = "resim/konserve/" + ürün.resim;
        fetch (resimYolu)
            .then (function (yanıt) {return yanıt.blob();})
            .then (function (damla) {
                let resimNesnesi = URL.createObjectURL (damla);
                ürünüGöster (resimNesnesi, ürün);
            }); // then sonu...
    } // func sonu...

    function ürünüGöster(resimNesnesi, ürün) {
        // Dinamik <section>, <h2>, <p>, ve <img> elemanları yaratılacak...
        const kısım = document.createElement ("section");
        const h2Başlık = document.createElement ("h2");
        const fiyatParagrafı = document.createElement ("p");
        const resim = document.createElement ("img");
        kısım.setAttribute ("class", ürün.tip); // ürün.tip url-ikon doğrudan css'den yüklenecek...

        h2Başlık.textContent = ürün.ad.replace (ürün.ad.charAt (0), ürün.ad.charAt (0).toUpperCase()); // Ürün adı başharfi büyük olacak...
        fiyatParagrafı.textContent = "TL" + (ürün.fiyat * 8.45).toFixed (2); // TL fiyat 2 ondalık haneli ve $/TL kur ayarlı olacak...
        resim.src = resimNesnesi;
        resim.alt = ürün.ad;

        kısım.appendChild (h2Başlık); // h2Başlık, yuvarlak paftalı fiyat, ürün resmi, css'den ürün ikonu==> section'a eklenecek...
        kısım.appendChild (fiyatParagrafı);
        kısım.appendChild (resim);
        esas.appendChild (kısım); // Resimli section main'a eklenecek...
    } // func sonu...
} // func(uygulamayıÇalıştır) sonu...